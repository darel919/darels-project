@inject HttpClient Http
@inject NavigationManager Navigation
@rendermode InteractiveServer

<main>
    <div class="search-container">
        <svg xmlns="http://www.w3.org/2000/svg" height="24px" viewBox="0 -960 960 960" width="24px" fill="#000000">
            <path d="M784-120 532-372q-30 24-69 38t-83 14q-109 0-184.5-75.5T120-580q0-109 75.5-184.5T380-840q109 0 184.5 75.5T640-580q0 44-14 83t-38 69l252 252-56 56ZM380-400q75 0 127.5-52.5T560-580q0-75-52.5-127.5T380-760q-75 0-127.5 52.5T200-580q0 75 52.5 127.5T380-400Z"/>
        </svg>
        <input @bind-value="searchQuery" @oninput="OnSearchInputChanged" type="search" autocomplete placeholder="Type to search..." />
        <button id="goSearchBtn" @onclick="SearchNow" disabled="@string.IsNullOrWhiteSpace(searchQuery)">Search</button>
    </div>
</main>

@code {
    private void SearchNow() {
       if(!string.IsNullOrEmpty(searchQuery)) {
            Navigation.NavigateTo("/search?q="+searchQuery);
       }
    }
    private string searchQuery;
    private Timer debounceTimer;
    private const int DebounceDelay = 750; // 500ms delay

     private void OnSearchInputChanged(ChangeEventArgs e) {
        searchQuery = e.Value.ToString();

        if(!string.IsNullOrEmpty(searchQuery)) {
            debounceTimer?.Dispose(); // Reset the timer
            debounceTimer = new Timer(async _ => {
                Navigation.NavigateTo("/search?q="+searchQuery);
                 InvokeAsync(StateHasChanged);
            }, null, DebounceDelay, Timeout.Infinite);
        }
    }
}
