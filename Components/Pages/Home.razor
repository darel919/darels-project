@inject NavigationManager Navigation
@page "/"
@rendermode InteractiveServer
<PageTitle>darel's Project Home</PageTitle>
<HeadContent>
    <meta name=”robots” content="index, follow">
    <meta name="type" content="website">
    <meta name="og:title" content="darel's Video Project">
    <meta name="description" content="Watch all of my archived video works on darel's Project">
    <meta name="og:description" content="Watch all of my archived video works on darel's Project">
    <meta name="twitter:title" content="darel's Video Project">
    <meta name="twitter:description" content="Watch all of my archived video works on darel's Project">
</HeadContent>
<h1>Welcome to darel's Video Project</h1>

@if(fetchedVideos != null) {
    @foreach (var video in fetchedVideos) {
        <a href="/watch?v=@video.content_id">
            <div class="videoPage" title="@video.ytData.title">
                <img class="imgThumbnail" loading="lazy" src="@video.ytData.videoThumbnails[4].url" alt="Thumbnail"/>
                <div>
                    <h1>@video.ytData.title</h1>
                    <h6>Recorded at: @video.created_at</h6>
                </div>
            </div>
        </a>
    }
} else {
    <h1>Loading content...</h1>
}


@code {
    private readonly HttpClient httpClient = new HttpClient();

    public List<FetchedData> fetchedVideos;

    public class Thumbnail {
        public string url { get; set; }
    }

    public class YTData {
        public string title { get; set; }
        public List<Thumbnail> videoThumbnails { get; set; }
    }

    public class FetchedData {
        public DateTime created_at { get; set; }
        public string content_id { get; set; }
        public string type_id { get; set; }
        public YTData ytData { get; set; }
    }


    protected override async Task OnParametersSetAsync() {
        await FetchData();
    }

    public async Task FetchData() {
        var apiUrl = $"http://10.10.10.10:328/dp?sortBy=desc";
        fetchedVideos = await httpClient.GetFromJsonAsync<List<FetchedData>>(apiUrl);
    }
}
