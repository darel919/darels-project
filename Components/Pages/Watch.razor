@page "/watch"
@rendermode InteractiveServer

<PageTitle>@fetchedData?.ytData.title - darel's Projects</PageTitle>

<HeadContent>
    <meta name="robots" content="index, follow">
    <meta name="type" content="website">
    <meta name="keywords" content="darelisme, darel's project, dp, darelc, dws, web, service">
    <meta name="description" content="Play @fetchedData?.ytData.title at darel's Project">
    <meta name="author" content="@fetchedData?.submittedBy">

    <meta name="og:title" content="@fetchedData?.ytData.title">
    <meta name="og:description" content="Play @fetchedData?.ytData.title at darel's Project">
    <meta name="og:image" content="@fetchedData?.ytData.videoThumbnails[4].url">
    <meta name="og:url" content="https://projects.darelisme.my.id/watch?v=@VideoID" />

    <meta name="twitter:card" content="summary_large_image">
    <meta name="twitter:title" content="@fetchedData?.ytData.title">
    <meta name="twitter:description" content="Play @fetchedData?.ytData.title at darel's Project">
    <meta name="twitter:image" content="@fetchedData?.ytData.videoThumbnails[4].url">
</HeadContent>

<main id="watchPage">
    @if (fetchedData != null) {
        <div id="videoComponent">
            <iframe class="iplayer" loading="eager" title="Player" allowfullscreen allow="autoplay" src="https://inv.nadeko.net/embed/@fetchedData.vid_uid?autoplay=1&continue=0&related_videos=false&player_style=youtube&local=true&subtitles=id&quality=dash&quality_dash=auto&comments=false&extend_desc=false&thinmode=true">
            <noscript>Your browser doesn't support JavaScript.</noscript>
            </iframe>
            <h1>@fetchedData.ytData.title</h1>
            <h6>Record date: @fetchedData.created_at</h6>
            <h6>@fetchedData.total_views views</h6>
            <FluentButton @onclick="ShareVid" IconStart="@(new Icons.Regular.Size20.Share())" Title="Share this video">
                Share
            </FluentButton>
            <a href="https://youtu.be/@fetchedData.vid_uid" target="_blank" title="Play on YouTube">
                <FluentButton IconStart="@(new Icons.Regular.Size20.WindowPlay())">
                    I have problem playing
                </FluentButton>
            </a>
        </div>
        <dpOnDotnet.Components.Modules.RecommendationComp CurrentVideoId="@fetchedData.content_id" />
    } else {
        <FluentProgressRing></FluentProgressRing>
        <h6>Loading content...</h6>
    }
</main>

@code {
    private readonly HttpClient httpClient = new HttpClient();
    [SupplyParameterFromQuery(Name = "v")]
    public string VideoID { get; set; }
    public FetchedData fetchedData;

    @inject IJSRuntime JSRuntime
    @inject NavigationManager Navigation

    public class FetchedData {
        public DateTime created_at { get; set; }
        public string vid_uid { get; set; }
        public string content_id { get; set; }
        public string submittedBy { get; set; }
        public int total_views { get; set; }
        public YTData ytData { get; set; }
    }

    public class YTData {
        public string title { get; set; }
        public List<Thumbnail> videoThumbnails { get; set; }
        public string description { get; set; }
    }

    public class Thumbnail {
        public string url { get; set; }
    }

    private async Task ShareVid() {
        var title = fetchedData?.ytData.title;
        var text = $"Watch {title} on darel's Project!";
        var url = Navigation.ToAbsoluteUri(Navigation.Uri).ToString();

        await JSRuntime.InvokeVoidAsync("shareContent", title, text, url);
    }

    protected override async Task OnParametersSetAsync() {
        await FetchData();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender) {
        if (shouldScrollToTop) {
            shouldScrollToTop = false;
            await ScrollToTop();
        }
    }

    public async Task FetchData() {
        try {
            var apiUrl = $"http://10.10.10.10:328/dp/watch?v={VideoID}";
            fetchedData = await httpClient.GetFromJsonAsync<FetchedData>(apiUrl);
            shouldScrollToTop = true;
            StateHasChanged(); // Trigger a re-render to call OnAfterRenderAsync
        } catch (Exception ex) {
            Console.WriteLine($"Error fetching data: {ex.Message}");
        }
    }

    private bool shouldScrollToTop = false;

    private async Task ScrollToTop() {
        await JSRuntime.InvokeVoidAsync("window.scrollTo", 0, 0);
    }
}
<script>
    function shareContent(title, text, url) {
        const shareData = {
            title: title,
            text: text,
            url: url
        };
        if (navigator.share) {
            navigator.share(shareData)
                .then(() => console.log('Content shared successfully'))
                .catch((error) => console.error('Error sharing content:', error));
        } else {
            alert("Your browser doesn't support share API!")
            console.error("Web Share is not supported in your browser!");
        }
    }
</script>
